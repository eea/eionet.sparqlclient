<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eionet</groupId>
    <artifactId>sparqlclient</artifactId>
    <version>2.0-SNAPSHOT</version>
    <name>sparqlclient</name>
    <url>https://github.com/eea</url>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javaVersion>1.6</javaVersion>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HHmm</maven.build.timestamp.format>
    </properties>

    <!-- configuration of Maven repositories to be used -->
    <repositories>
        <repository>
            <id>archiva.internal</id>
            <name>Internal Release Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/internal/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>archiva.snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>archiva.internal</id>
            <name>Internal Release Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/internal/</url>
        </repository>
         <snapshotRepository>
            <id>archiva.snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


    <build>
        <finalName>sparqlclient</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <inherited>true</inherited>
                <configuration>
                    <verbose>false</verbose>
                    <fork>false</fork>
                    <compilerVersion>${javaVersion}</compilerVersion>
                    <source>${javaVersion}</source>
                    <target>${javaVersion}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.3</version>
                <configuration></configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>${project.version}</classifier>
                            <includes>
                                <include>eionet/sparqlClient/helpers/*</include>
                                <include>eionet/sparqlClient/util/*</include>
                                <include>uk/me/mmt/sprotocol/*</include>
                            </includes>
                            <excludes>
                                <exclude>eionet/sparqlClient/helpers/SPARQLEndpoints.class</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                   <formats>
                       <format>xml</format>
                   </formats>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.6</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
            <type>jar</type>
        </dependency>
        <!-- TEST dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <linkXref>false</linkXref>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>300</minimumTokens>
                    <targetJdk>${javaVersion}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <configLocation>${project.basedir}/checkstyle.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
          <id>docker</id>
          <!--
          <properties>
            <tomcat.port>4780</tomcat.port>
          </properties>
          -->
          <build>
            <plugins>
              <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.6</version>
                <configuration>
                  <verbose>true</verbose>
                  <logDate>default</logDate>
                  <autoPull>true</autoPull>
                  <images>
                    <image>
                      <alias>service</alias>
                      <name>dockerrepo.eionet.europa.eu:5000/${project.groupId}/${project.artifactId}</name>
                      <build>
                        <from>tomcat:7-jre8</from>
                        <maintainer>SÃ¸ren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                          <tag>${maven.build.timestamp}</tag>
                        </tags>
                        <!-- Assembly descriptor holds the reference to the created artifact-->
                        <assembly>
                          <!--descriptor>assembly.xml</descriptor-->
                          <descriptorRef>rootWar</descriptorRef>
                        </assembly>
                        <runCmds>
                          <run>rm -rf /usr/local/tomcat/webapps/*</run>
                          <run>mv /maven/ROOT.war /usr/local/tomcat/webapps/ROOT.war</run>
                        </runCmds>
                        <optimise>true</optimise>

                        <!-- Expose ports -->
                        <ports>
                          <port>8080</port>
                          <port>8009</port>
                        </ports>
                        <!-- Default command for the build image -->
                        <!--<cmd>catalina.sh run</cmd> -->
                      </build>

                      <run>
                        <env>
                          <CATALINA_OPTS>-Djava.security.egd=file:/dev/./urandom</CATALINA_OPTS>
                          <ENDPOINTS>http://cr.eionet.europa.eu/sparql, http://semantic.eea.europa.eu/sparql, http://dbpedia.org/sparql, http://live.dbpedia.org/sparql, http://semantic.data.gov/sparql, http://services.data.gov.uk/transport/sparql, http://pubchem.bio2rdf.org/sparql, http://bnb.data.bl.uk/sparql</ENDPOINTS>
                        </env>
                        <!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
                        <ports>
                          <port>tomcat.port:8080</port>
                        </ports>
                        <wait>
                          <!--<log>Deployment of web application archive /usr/local/tomcat/webapps/ROOT.war has finished in</log>-->
                          <!-- Check for this URL to return a 200 return code .... -->
                          <url>http://${docker.host.address}:${tomcat.port}/</url>
                          <time>30000</time>
                        </wait>
                        <log>
                          <prefix>TC</prefix>
                          <color>red</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>

                <!-- Hooking into the lifecycle -->
                <executions>
                  <execution>
                    <id>start</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                      <goal>build</goal>
                      <goal>start</goal>
                    </goals>
                  </execution>
                  <execution>
                    <id>stop</id>
                    <phase>post-integration-test</phase>
                    <goals>
                      <goal>stop</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                  <systemPropertyVariables>
                    <app.url>http://${docker.host.address}:${tomcat.port}/</app.url>
                  </systemPropertyVariables>
                </configuration>
              </plugin>

            </plugins>
          </build>
        </profile>
    </profiles>
</project>
