ul#exploretabs {
  display:inline-block;
  margin:0;
  padding:0;
  list-style:none;
}

#intro {
  margin: 1em;
  padding: 0.5em;
  background-color: #a5ced1;
  border: 1px solid black;
}

.exploretab {
  float:left;
  border: 1px solid #000080;
  border-radius: 5px;
  margin: 2px;
  padding: 2px;
}

.literal {
  white-space: pre-wrap;
}

/* The containing element has the expandingArea
   class, define any border or inset box-shadow
   etc. here that you want to style your textarea.
   I've just added a simple 1px solid mid-grey
   border. You can also set a min-height property
   here if you want and it works as expected.
 */
div.documentContent .expandingArea {
  position: relative;
  min-height: 8em;
  border: 2px inset #aaa;
  background: #fff;
}
/* Any padding should go in here; it needs to be
   the same for both the pre and the textarea. You
   also need to make sure both have exactly the
   same font and line height properties, although
   the exact values can of course be anything you
   want.
 */
div.documentContent .expandingArea > textarea,
div.documentContent .expandingArea > pre {
  padding: 5px;
  margin: 0;
  outline: 0;
  border: 0;
  background: transparent;
  font: 400 13px/16px Monaco, "Courier New", Courier, monospace;
  /* Make the text soft-wrap */
  white-space: pre-wrap;
  word-wrap: break-word;
}

div.documentContent .expandingArea > textarea {
  /* The border-box box model is used to allow
     padding whilst still keeping the overall width
     at exactly that of the containing element.
   */
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
          box-sizing: border-box;
  /* This height is used when JS is disabled */
  height: 100px;
  width: 100%;
}

div.documentContent .expandingArea.active > textarea {
  /* Hide any scrollbars */
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  /* Remove WebKit user-resize widget */
  resize: none;
}

div.documentContent .expandingArea > pre {
  display: none;
}
div.documentContent .expandingArea.active > pre {
  display: block;
  /* We don't actually want to see this text, it's just for sizing */
  visibility: hidden;
}

